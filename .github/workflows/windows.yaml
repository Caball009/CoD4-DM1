name: Windows

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Conan
      uses: turtlebrowser/get-conan@main

    - name: Build
      run: |
        mkdir build && cd build
        conan install .. --build missing -o enable_testing=True
        cmake .. -DENABLE_TESTING=True
        cmake --build .

    - name: Artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: build

  tests:
    runs-on: windows-latest
    needs: [build]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: OpenCppCoverage
      shell: bash
      run: |
        choco install -y opencppcoverage
        echo "C:\Program Files\OpenCppCoverage" >> $GITHUB_PATH

    - name: Artifact
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build

    - name: Tests
      run: |
        opencppcoverage --quiet --export_type=cobertura:opencppcoverageCoverage.xml --working_dir build --sources src -- build/bin/CoD4DM1.Tests.exe

    - name: CodeCov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./opencppcoverageCoverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true
